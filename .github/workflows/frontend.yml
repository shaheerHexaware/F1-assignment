name: Flutter CI/CD

on:
  push:
    branches: [feature/ci-cd]
    paths:
      - "frontend/**"
      - '.github/workflows/frontend.yml'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  flutter_ci:
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "21"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.0"
          channel: "stable"
          cache: true

      - name: Get version from pubspec.yaml
        id: version
        run: |
          VERSION=$(grep 'version: ' pubspec.yaml | sed 's/version: //')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Install dependencies
        run: flutter pub get

      - name: Run linter
        run: flutter analyze

      - name: Run tests
        run: flutter test

      - name: Generate env.json for Android
        run: |
          echo '{
            "API_URL": "${{ secrets.ANDROID_BASE_URL }}",
            "SEASON_START_YEAR": "${{ secrets.APP_SEASON_START_YEAR }}"
          }' > env.json

      - name: Build Android APK
        run: flutter build apk --release --dart-define-from-file=env.json

      - name: Generate env.json for IOS
        run: |
          echo '{
            "API_URL": "${{ secrets.IOS_BASE_URL }}",
            "SEASON_START_YEAR": "${{ secrets.APP_SEASON_START_YEAR }}"
          }' > env.json

      - name: Build iOS
        run: |
          cd ios
          pod install
          cd ..
          flutter build ios --release --no-codesign --dart-define-from-file=env.json

      - name: Zip iOS Build
        run: |
          cd build/ios/iphoneos
          zip -r ../../../ios-build.zip .

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          files: |
            frontend/build/app/outputs/flutter-apk/app-release.apk
            frontend/ios-build.zip
          draft: false
          prerelease: false
          fail_on_unmatched_files: true
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
